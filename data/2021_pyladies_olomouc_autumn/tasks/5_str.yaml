tasks:

- section:
    markdown: |
      Procvičení řetězců. Měj při ruce tahák!

- id: handout5_00
  markdown: |
    Napiš program, který se zeptá na dva řetězce a zjistí,
    jestli je jeden obsažen ve druhém.
    Nebere přitom ohled na velikost písmen.

- id: handout5_01
  markdown: |
    Napiš program, který se zeptá na příjmení uživatelky/uživatele
    a *zkusí* podle něj uhodnout její/jeho pohlaví.
    To pak vypíše.

    (Pohlaví není podle příjmení možné určit přesně – stačí zvládnout ty
    nejčastější podoby českých příjmení.)

- id: handout5_02
  markdown: |
    Najdi si na internetu text své oblíbené písně, zkopíruj si ho do řetězce
    a zjisti, kolikrát je v něm použito písmeno K. (Ať už velké, nebo malé.)

    Text by mělo jít jednoduše vyměnit za jiný.

- id: handout5_03
  markdown: |
    Zjisti, kolik je v textu tvé oblíbené písně písmen. Nepočítej mezery, znaky nového řádku a znaky
    `!"#$%&\'()*+,-./:;<=>?@[\]^_{|}~`.

    Text písně by mělo jít jednoduše vyměnit za jiný.

    Postup:

    * Na začátku nastav **počet nalezených písmen** na 0.
    * Pro každý znak textu:
        * Když znak není obsažen v `!` `"` `#` `$` `%` `&` …:
            * Zvyš **počet nalezených písmen** o 1.
    * Vypiš **počet nalezených písmen**.

- id: handout5_04
  markdown: |
    Napiš program, který přijme od uživatele řetězec a zjistí, jestli je zadaný řetězec [palindrom](https://cs.wikipedia.org/wiki/Palindrom).

    Pokud ano, program vypíše "Je palindrom". Pokud není, program vypíše "Není palindrom".

- section:
    markdown: |
      A teď nás čeká oblíbená hra!

- id: handout5_05
  markdown: |
    Vytvoř hru Šibenice podle následujícího popisu.

    * Program si zvolí nějaké slovo, které bude uživatel hádat (slovo ulož do proměnné).
        Pro jednoduchost používejte malá písmena a nepoužívejte slova,
        ve kterých se stejné písmeno opakuje dvakrát
        (třeba č<span style='color: red'>o</span>k<span style='color: red'>o</span>láda).

        Zkus třeba slova: `trávník`, `stromek`, `stavení`.

    * Výchozí **stav** je řetězec s tolika podtržítky, kolik je
        ve vybraném slově písmen.

    * Výchozí počet **neúspěšných pokusů** je nula.

    * Prováděj stále dokola:
        * Zeptej se hráče na **písmeno**.
        * Pokud je to **písmeno** ve vybraném **slově**:
            * Zaměň ve **stavu** příslušné podtržítko za ono **písmeno**.
              (Bude se hodit řetězcová metoda `index` a nahrazení písmena v řetězci, které jsme si
               ukazovali na lekci.)
        * Pokud dané **písmeno** _není_ ve vybraném slově:
            * započítej **neúspěšný pokus**.
        * Vypiš **stav** (slovo s případnými podtržítky).
        * Pokud už ve **stavu** nejsou podtržítka:
            * Pogratuluj hráči.
            * Ukonči hru.
        * Vypiš počet **neúspěšných pokusů**.
        * Pokud je počet **neúspěšných pokusů** 9 (nebo víc):
            * Dej hráči najevo, že prohrál.
            * Ukonči hru.

- section:
    markdown: |
      Následující úkol je určen pro "fajnšmekry". Pokud si s ním nebudeš vědět rady, zkus kontaktovat
      kouče, případně se k němu můžeš vrátit později, až si budeš s Pythonem rozumět lépe.

- id: handout5_06
  markdown: |
    Napiš program, který bude převádět řetězec na celé číslo **bez použití funkce `int`**. Pro
    otestování převodu načti od uživatele řetězec, přičti k němu jedničku a výsledek vypiš.

    ---

    Níže je návod. Zkus program nejprve napsat bez něj.

    1. Vytvoř si proměnnou, která bude obsahovat výsledné celé číslo.
    2. Projdi řetězec znak po znaku.
    3. Každý znak převeď na odpovídající číselnou hodnotu.
        - Bude se k tomu hodit funkce `ord`, která převede znak na jeho ASCII hodnotu.
        - ASCII tabulku si lze prohlédnout např. [zde](https://www.asciitable.com/).
    4. Proměnnou s výsledkem vynásob desíti a přičti k ní číselnou hodnotu znaku.
