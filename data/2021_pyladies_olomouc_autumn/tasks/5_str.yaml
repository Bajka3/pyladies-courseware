tasks:

- section:
    markdown: |
      Procvičení řetězců. Mějte při ruce taháky!

- id: handout5_00
  markdown: |
    Napište program, který se zeptá na dva řetězce a zjistí,
    jestli je jeden obsažen ve druhém.
    Nebere přitom ohled na velikost písmen.

- id: handout5_01
  markdown: |
    Napište program, který se zeptá na příjmení uživatelky/uživatele
    a *zkusí* podle něj uhodnout její/jeho pohlaví.
    To pak vypíše.

    (Pohlaví není podle příjmení možné určit přesně – stačí zvládnout ta
    nejčastější česká příjmení.)

- id: handout5_02
  markdown: |
    Najděte na internetu text své oblíbené písně, zkopírujte si ho do řetězce
    a zjistěte, kolikrát je v něm použito písmeno K. (Velké nebo malé.)

    Text by mělo jít jednoduše vyměnit za jiný.

    Jako u všech úkolů odevzdejte prosím jen jedno řešení – ideálně
    to nejzajímavější nebo jinak "nejlepší", ale klidně jakékoli co
    splňuje zadání.
    (V případě že se nedohodnete můžete vložit víc řešení najednou.
    Doporučuju se pak ale o tom, proč jste se nedohodli, poradit v diskusi.)

- id: handout5_03
  markdown: |
    Najděte na internetu text své oblíbené písně, zkopírujte si ho do řetězce
    a zjistěte, kolik je v něm písmen.
    Nepočítejte mezery, znaky nového řádku a znaky
    `!"#$%&\'()*+,-./:;<=>?@[\]^_{|}~`.

    Text písně by mělo jít jednoduše vyměnit za jiný.

    Postup:

    * Na začátku nastav **počet nalezených písmen** na 0.
    * Pro každý znak textu:
        * Když znak není obsažen v `!` `"` `#` `$` `%` `&` …:
            * Zvyš **počet nalezených písmen** o 1.
    * Vypiš **počet nalezených písmen**.

- section:
    markdown: |
      Máme tu i tradiční hru!

- id: handout5_04
  markdown: |
    Vytvořte hru Šibenice podle následujícího popisu.

    * Počítač náhodně zvolí **slovo** (zatím třeba ze tří možností).
        Pro jednoduchost používejte malá písmena a nepoužívejte slova,
        ve kterých se stejné písmeno opakuje dvakrát
        (třeba č<span style='color: red'>o</span>k<span style='color: red'>o</span>láda).

        Zkuste třeba slova: `trávník`, `stromek`, `stavení`.

    * Výchozí **stav** je řetězec s tolika podtržítky, kolik je
        ve vybraném slově písmen.

    * Výchozí počet **neúspěšných pokusů** je nula.

    * Stále dokola:
        * Zeptej se hráče na **písmeno**.
        * Pokud je to **písmeno** ve vybraném **slově**:
            * Zaměň ve **stavu** příslušné podtržítko za ono **písmeno**.
              (Bude se hodit řetězcová metoda `index` a podprogram `zamen`\*
              z videa.)
        * Pokud dané **písmeno** _není_ ve vybraném slově:
            * započítej **neúspěšný pokus**.
        * Vypiš **stav** (slovo s případnými podtržítky).
        * Pokud už ve **stavu** nejsou podtržítka:
            * Pogratuluj hráči.
            * Ukonči hru.
        * Vypiš počet **neúspěšných pokusů**.
        * Pokud je počet **neúspěšných pokusů** 9 (nebo víc):
            * Dej hráči najevo, že prohrál.
            * Ukonči hru.

    ---

    \* Podprogram `zamen` jsme si ukázali na videu:
    ```python
    # Ve slově `slovo` zaměnit znak na pozici `pozice` za `novy_znak`;
    # výsledek bude v proměnné `nove_slovo`.
    zacatek = slovo[:pozice]
    konec = slovo[pozice + 1:]
    nove_slovo = zacatek + novy_znak + konec
    ```
