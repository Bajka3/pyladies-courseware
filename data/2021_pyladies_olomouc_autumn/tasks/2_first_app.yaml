tasks:

- id: handout2_1
  markdown: |
    Jak se jmenuje druh chyby, která nastane, když…

    - Dáš uvozovky jen na jednu stranu řetězce? — SyntaxError
    - Zkusíš odečíst číslo od řetězce? —
    - Dělíš nulou? —
    - Použiješ proměnnou, která neexistuje? —
    - Stiskneš Ctrl+C, když se program ptá na vstup (pomocí input)? —
    - Odsadíš příkaz bez předchozího if:? —
    - Po `if:` odsadíš jeden příkaz o čtyři mezery a druhý jen o dvě? —
    - Neuzavřeš závorku? –
    - Zkusíš použít vykřičník (`!`) jako operátor? —
    - Napíšeš v příkazu `print(1, 2, 3)` čárku navíc? —

- id: handout2_2
  markdown: |
    _Podívej se na odpovědi na předchozí otázku, ale Python zkus použít jen na ověření._

    Jaká chyba nastane, když zkusíš použít proměnnou předtím, než do ní něco přiřadíš?

- id: handout2_3
  markdown: |
    _Podívej se na odpovědi na otázku 1, ale Python použij jen na ověření._

    Jaká chyba nastane, když zkusíš podělit řetězec řetězcem?

- id: handout2_4
  markdown: |
    Lomítko (`/`) je operátor, ale nedá se použít na řetězce. Vykřičník (`!`) v Pythonu není operátor.
    Jak se liší chyby, které vzniknou, když se pokusíš použít lomítko na řetězci nebo vykřičník na čísle?

- id: handout2_5
  markdown: |
    Ne všechno se dá použít jako jméno proměnné.
    Fungují pro proměnné následující jména? Pokud ne, proč asi?

    <div style='column-count: 4'>
      <code>x</code><br>
      <code>tlacitko4</code><br>
      <code>34</code><br>
      <code>3e4</code><br>
      <code>krůta</code><br>
      <code>$i</code><br>
      <code>druha-odmocnina</code><br>
      <code>readme.txt</code><br>
      <code>kratsiStrana</code><br>
      <code>POCET_BODU</code><br>
      <code>_</code> (podtržítko)<br>
      <code>π</code> (pí)<br>
      <code>True</code><br>
      <code>_cache</code><br>
      <code>__name__</code><br>
      <code>while</code><br>
    </div>

- section:
    markdown: |
      Následující projekty jsou na procvičení toho, co jsme dělaly na srazu.

- id: handout2_6
  markdown: |
    _Zkus se nedívat na programy ze srazu._

    Napiš program, který spočítá povrch a objem krychle o straně 2852 cm.

    Abys nemusela tolik hledat v učebnici (vlastně Wikipedii): povrch S = 6a², objem V = a³

    _Řešení, pro kontrolu: S = 48803424 cm², V = 23197894208 cm³_

  mandatory: true

- id: handout2_7
  markdown: |
    Změň program tak, aby stranu/poloměr mohl uživatel zadat.

    _Tady už se na materiály ze srazu klidně podívej._

  mandatory: true

- id: handout2_8
  markdown: |
    Které pythonní _operátory_ dokážeš z hlavy vyjmenovat?

- id: handout2_9
  markdown: |
    Zkusila jsi porovnávat řetězce?
    Doplň tuhle tabulku tužkou; pak ověř odpovědi pomocí Pythonu:

    | `a`     |      | `b`       |
    |---------|:----:|-----------|
    | `2`     |  >   | `1`       |
    | `1`     |  <   | `2`       |
    | `'abc'` |  ==  | `'abc'`   |
    | `'aaa'` |      | `'abc'`   |
    | `'abc'` |      | `'Abc'`   |
    | `'abC'` |      | `'abc'`   |
    | `'abc'` |      | `'abcde'` |
    | `'abc'` |      | `'ábč'`   |
    | `'abc'` |      | ``10``    |

- id: handout2_10
  markdown: |
    Jaká je hodnota proměnné po provedení příkazů:

    * <code>promenna = 1 < 2</code> ?
    * <code>promenna = 2 < 2</code> ?
    * <code>promenna = 1 < 2 < 3</code> ?
    * <code>promenna = 1 < 3 < 2</code> ?
    * <code>promenna = 1 < 3 < 3</code> ?
    * <code>promenna = 'abc' < 'ABC' < 'def' < 'zajíc'</code> ?

    Tam, kde je hodnota proměnné `False`, dají se některé z porovnávaných hodnot mezi sebou vyměnit, aby
    byla `True`?

- id: handout2_11
  markdown: |
    Napiš program, který po zadání správného hesla vypíše nějakou tajnou informaci.

    _Vhodné tajemství je třeba: V pátek jsem viděla černého havrana._

- id: handout2_12
  markdown: |
    Na srazu jsme měli program, který píše různé nesmysly podle uživatelem zadaného věku.

    Zkus napsat program, který píše hlášky podle zadané rychlosti chůze, váhy ulovené ryby, počtu tykadel,
    teploty vody nebo třeba vzdálenosti od rovníku.

- id: handout2_13
  markdown: |
    Doplň tuhle tabulku:

    | `a`     | `b`     | `a and b` | `a or b` | `not a` |
    |---------|---------|-----------|----------|---------|
    | `True`  | `True`  |           |          |         |
    | `False` | `True`  |           |          |         |
    | `True`  | `False` |           |          |         |
    | `False` | `False` |           |          |         |

    Tohle je takzvaná _pravdivostní_ tabulka:
    _Obsahuje jeden řádek pro každou kombinaci booleovských hodnot, které `a` a `b` můžou mít. Když se stane, že se v složitějších `and` a `or` ztratíš, doporučuji napsat si podobnou tabulku a na každý řádek se podívat zvlášť._

- id: handout2_14
  markdown: |
    Zkus napsat program, který si bude "myslet" nějaké číslo (to v kódu ulož do proměnné) a vyzve
    uživatele, aby číslo uhodl.

    Pokud uživatel číslo uhodne, pogratuluj mu. Pokud ne, napiš, jak daleko byl od správného výsledku.
